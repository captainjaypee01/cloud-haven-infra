networks:
  webnet:
    external: true
    name: global-web-network

volumes:
  mysql-prod-data:
  laravel-prod-storage:
  
services:
  frontend-prod:
    build:
      context: ../../cloud-haven-frontend
      dockerfile: Dockerfile
      args:
        VITE_BUILD_MODE: "production"
    image: cloud-haven-web:prod
    container_name: frontend-prod
    networks: [ webnet ]

  backend-prod:
    build:
      context: ../../cloud-haven-api
      dockerfile: Dockerfile
    image: cloud-haven-api:prod
    container_name: backend-prod
    env_file: ./env/prod.backend.env
    depends_on: [ mysql-prod, redis-prod ]
    volumes:
      - laravel-prod-storage:/var/www/html/storage
    networks: [ webnet ]

  queue-prod:
    image: cloud-haven-api:prod
    container_name: queue-prod
    env_file: ./env/prod.backend.env
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    depends_on: [ backend-prod, redis-prod ]
    networks: [ webnet ]
    restart: always

  scheduler-prod:
    image: cloud-haven-api:prod
    container_name: scheduler-prod
    env_file: ./env/prod.backend.env
    command: php artisan schedule:work
    depends_on: [ backend-prod, redis-prod ]
    networks: [ webnet ]
    restart: always

  mysql-prod:
    image: mysql:8.4
    container_name: mysql-prod
    env_file: ./env/prod.mysql.env
    volumes:
      - ${MYSQL_PROD_DATA:-${VOLUME_ROOT}/mysql/prod}:/var/lib/mysql
    # optional: bind to droplet localhost for SSH tunneling
    ports:
      - "127.0.0.1:3306:3306"
    networks: [ webnet ]

  redis-prod:
    image: redis:8.2-alpine
    container_name: redis-prod
    networks: [ webnet ]

