# ---------- Global (http context) ----------
resolver 127.0.0.11 ipv6=off valid=10s;
server_tokens off;                        # hide version (leaves "Server: nginx")

# SSL Configuration - Modern and Secure
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS;
ssl_prefer_server_ciphers on;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;
ssl_trusted_certificate /etc/letsencrypt/live/netaniadelaiya.com/chain.pem;
# Security headers added on every TLS response
# (HSTS only after you confirm TLS works; includes subdomains; add 'preload' later if you enroll)
map $sent_http_content_type $csp {
    ~*text/html "default-src 'self' https://api.netaniadelaiya.com https://*.clerk.com https://*.cloudinary.com; base-uri 'self'; object-src 'none'; frame-ancestors 'self'; script-src 'self' https://* 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' 'unsafe-inline' https://* https://fonts.googleapis.com; font-src 'self' data: https://fonts.gstatic.com; img-src 'self' data: blob: https:; connect-src 'self' https://api.netaniadelaiya.com https://*.clerk.com wss: https:; frame-src 'self' https://*.clerk.com https://storage.googleapis.com; worker-src 'self' blob: data:; child-src 'self' blob: data:; upgrade-insecure-requests;";
    default "";
}

# ---- Compression (applies to all servers) ----
gzip on;
gzip_comp_level 6;
gzip_min_length 1024;
gzip_vary on;
gzip_proxied any;
gzip_types
    text/plain
    text/css
    text/xml
    application/xml
    application/rss+xml
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    image/svg+xml
    font/ttf
    font/otf
    application/vnd.ms-fontobject;

etag on;

# Allow only these origins
map $http_origin $cors_origin {
    default "";
    "~^https://(www.netaniadelaiya\.com|uat\.netaniadelaiya\.com)$" $http_origin;
}

# ---------- PROD WEB ----------
server {
    listen 80;
    server_name netaniadelaiya.com;
    return 301 https://www.netaniadelaiya.com$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name netaniadelaiya.com;

    ssl_certificate     /etc/letsencrypt/live/netaniadelaiya.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/netaniadelaiya.com/privkey.pem;

    return 301 https://www.netaniadelaiya.com$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name www.netaniadelaiya.com;

    ssl_certificate     /etc/letsencrypt/live/netaniadelaiya.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/netaniadelaiya.com/privkey.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Don’t leak upstream headers
    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;               # hides upstream "Server" from backend; Nginx's own header remains
    proxy_hide_header Content-Security-Policy;   # <— ADD THIS

    add_header Content-Security-Policy $csp always;

    # Use variables so nginx re-resolves via Docker DNS without reload
    set $prod_web "frontend-prod:80";
    set $prod_api "backend-prod:80";

    # Cache rules
    # HTML should not be cached aggressively (SPA shell)
    location = /index.html {
        add_header Cache-Control "no-cache, must-revalidate, max-age=0" always;
    }

    # Hashed build assets (Vite outputs to /assets) - long cache
    location /assets/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$prod_web;

        proxy_hide_header Cache-Control;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

    # Common static types at root (images, fonts, etc.) - long cache
    location ~* \.(?:css|js|mjs|map|wasm)$ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$prod_web;

        proxy_hide_header Cache-Control;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

    location ~* \.(?:png|jpe?g|webp|gif|svg|ico)$ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$prod_web;

        proxy_hide_header Cache-Control;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

    location ~* \.(?:woff2?|ttf|otf|eot)$ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$prod_web;

        proxy_hide_header Cache-Control;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

    # Robots.txt for Production Frontend - allow crawling
    location = /robots.txt {
        add_header Content-Type "text/plain";
        return 200 "User-agent: *\nAllow: /\n\n# Disallow admin dashboard from indexing\nDisallow: /admin\n\n# Production sitemap\nSitemap: https://www.netaniadelaiya.com/sitemap.xml\n";
    }

    # Serve frontend with SPA fallback
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://frontend-prod:80;
        
        # SPA fallback - if the backend returns 404, try index.html
        proxy_intercept_errors on;
        error_page 404 = @fallback;
    }
    
    # SPA fallback location
    location @fallback {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://frontend-prod:80/index.html;
    }

    # Safety net: if the SPA still calls /api/... on same origin, forward to backend
    location /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$prod_api;
    }

    client_max_body_size 20m; # adjust for image uploads
}

# ---------- PROD API ----------
server {
    listen 80;
    server_name api.netaniadelaiya.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name api.netaniadelaiya.com;

    ssl_certificate     /etc/letsencrypt/live/netaniadelaiya.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/netaniadelaiya.com/privkey.pem;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;

    # ---- NGINX OWNS CORS: drop any upstream CORS to avoid duplicates ----
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Credentials;
    proxy_hide_header Access-Control-Expose-Headers;
    proxy_hide_header Access-Control-Allow-Headers;
    proxy_hide_header Access-Control-Allow-Methods;

    # One canonical CORS set (applies to all responses)
    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Vary "Origin" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers $http_access_control_request_headers always;
    add_header Access-Control-Max-Age "600" always;
    # If you truly use cookies, also:
    # add_header Access-Control-Allow-Credentials "true" always;

    # Use variable so nginx re-resolves via Docker DNS without reload
    set $prod_api "backend-prod:80";

    # Robots.txt for Production API - block all crawling
    location = /robots.txt {
        add_header Content-Type "text/plain";
        return 200 "User-agent: *\nDisallow: /\n\n# Production API Environment - NO CRAWLING ALLOWED\nUser-agent: Googlebot\nDisallow: /\n\nUser-agent: Bingbot\nDisallow: /\n\nUser-agent: Slurp\nDisallow: /\n\nUser-agent: DuckDuckBot\nDisallow: /\n\nUser-agent: Baiduspider\nDisallow: /\n\nUser-agent: YandexBot\nDisallow: /\n\nUser-agent: facebookexternalhit\nDisallow: /\n\nUser-agent: Twitterbot\nDisallow: /\n\nUser-agent: LinkedInBot\nDisallow: /\n\nUser-agent: WhatsApp\nDisallow: /\n";
    }

    # Special handling for admin image uploads
    location /api/v1/admin/images {
        # Preflight: short-circuit so it never reaches Laravel
        if ($request_method = OPTIONS) {
            return 204;
        }

        # Forward auth to Laravel for real requests
        proxy_set_header Authorization $http_authorization;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Special upload settings for image uploads - more aggressive settings
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_request_buffering off;
        proxy_buffering off;
        proxy_max_temp_file_size 0;
        client_max_body_size 50m;
        client_body_buffer_size 1m;
        client_body_timeout 300s;
        
        # Disable HTTP/2 for this specific location to avoid protocol errors
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        proxy_pass http://$prod_api;
    }

    location / {
        # Preflight: short-circuit so it never reaches Laravel
        if ($request_method = OPTIONS) {
            return 204;
        }

        # Forward auth to Laravel for real requests
        proxy_set_header Authorization $http_authorization;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Upload configuration for large files
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_request_buffering off;
        proxy_buffering off;
        client_max_body_size 20m;
        
        proxy_pass http://$prod_api;
    }

    client_max_body_size 20m;
}

# ---------- UAT WEB (kept; harmless if UAT is down) ----------
server {
    listen 80;
    server_name uat.netaniadelaiya.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name uat.netaniadelaiya.com;

    ssl_certificate     /etc/letsencrypt/live/netaniadelaiya.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/netaniadelaiya.com/privkey.pem;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;
    proxy_hide_header Content-Security-Policy;   # <— ADD THIS

    add_header Content-Security-Policy $csp always;

    set $uat_web "frontend-uat:80";  

    # Robots.txt for UAT - serve blocking robots.txt
    location = /robots.txt {
        add_header Content-Type "text/plain";
        return 200 "User-agent: *\nDisallow: /\n\n# UAT Environment - NO CRAWLING ALLOWED\nUser-agent: Googlebot\nDisallow: /\n\nUser-agent: Bingbot\nDisallow: /\n\nUser-agent: Slurp\nDisallow: /\n\nUser-agent: DuckDuckBot\nDisallow: /\n\nUser-agent: Baiduspider\nDisallow: /\n\nUser-agent: YandexBot\nDisallow: /\n\nUser-agent: facebookexternalhit\nDisallow: /\n\nUser-agent: Twitterbot\nDisallow: /\n\nUser-agent: LinkedInBot\nDisallow: /\n\nUser-agent: WhatsApp\nDisallow: /\n";
    }

    location = /index.html {
        add_header Cache-Control "no-cache, must-revalidate, max-age=0" always;
    }

    # Hashed build assets (Vite outputs to /assets) - long cache
    location /assets/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$uat_web;

        proxy_hide_header Cache-Control;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

    # Common static types at root (images, fonts, etc.) - long cache
    location ~* \.(?:css|js|mjs|map|wasm)$ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$uat_web;

        proxy_hide_header Cache-Control;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

    location ~* \.(?:png|jpe?g|webp|gif|svg|ico)$ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$uat_web;

        proxy_hide_header Cache-Control;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

    location ~* \.(?:woff2?|ttf|otf|eot)$ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$uat_web;

        proxy_hide_header Cache-Control;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }
    # Serve UAT frontend with SPA fallback
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$uat_web;
        
        # SPA fallback - if the backend returns 404, try index.html
        proxy_intercept_errors on;
        error_page 404 = @uat_fallback;
    }
    
    # UAT SPA fallback location
    location @uat_fallback {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$uat_web/index.html;
    }


    # safety net for relative /api from UAT web -> still hit prod backend
    location /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://backend-uat:80;
    }

    client_max_body_size 20m;
}

# ---------- UAT API ----------
server {
    listen 80;
    server_name uat-api.netaniadelaiya.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name uat-api.netaniadelaiya.com;

    ssl_certificate     /etc/letsencrypt/live/netaniadelaiya.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/netaniadelaiya.com/privkey.pem;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;

    # ---- NGINX OWNS CORS (remove upstream & ensure single header) ----
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Credentials;
    proxy_hide_header Access-Control-Expose-Headers;
    proxy_hide_header Access-Control-Allow-Headers;
    proxy_hide_header Access-Control-Allow-Methods;

    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Vary "Origin" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers $http_access_control_request_headers always;
    add_header Access-Control-Max-Age "600" always;
    # add_header Access-Control-Allow-Credentials "true" always;  # only if using cookies

    set $uat_api "backend-uat:80";
    
    # Robots.txt for UAT API - serve blocking robots.txt
    location = /robots.txt {
        add_header Content-Type "text/plain";
        return 200 "User-agent: *\nDisallow: /\n\n# UAT API Environment - NO CRAWLING ALLOWED\nUser-agent: Googlebot\nDisallow: /\n\nUser-agent: Bingbot\nDisallow: /\n\nUser-agent: Slurp\nDisallow: /\n\nUser-agent: DuckDuckBot\nDisallow: /\n\nUser-agent: Baiduspider\nDisallow: /\n\nUser-agent: YandexBot\nDisallow: /\n\nUser-agent: facebookexternalhit\nDisallow: /\n\nUser-agent: Twitterbot\nDisallow: /\n\nUser-agent: LinkedInBot\nDisallow: /\n\nUser-agent: WhatsApp\nDisallow: /\n";
    }
    
    # Special handling for admin image uploads
    location /api/v1/admin/images {
        if ($request_method = OPTIONS) {
            return 204;
        }

        proxy_set_header Authorization $http_authorization;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Special upload settings for image uploads - more aggressive settings
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_request_buffering off;
        proxy_buffering off;
        proxy_max_temp_file_size 0;
        client_max_body_size 50m;
        client_body_buffer_size 1m;
        client_body_timeout 300s;
        
        # Disable HTTP/2 for this specific location to avoid protocol errors
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        proxy_pass http://$uat_api;
    }

    location / {
        if ($request_method = OPTIONS) {
            return 204;
        }

        proxy_set_header Authorization $http_authorization;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Upload configuration for large files
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_request_buffering off;
        proxy_buffering off;
        client_max_body_size 20m;
        
        proxy_pass http://$uat_api;
    }

    client_max_body_size 20m;
}
